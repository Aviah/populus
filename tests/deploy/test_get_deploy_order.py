import pytest

from populus.utils.deploy import (
    get_deploy_order,
)


#
# A -> (B, C)
# B -> null
# C -> (E,)
# D -> (B, E)
# E -> (B,)
#
CONTRACTS = {
    "A": {'bytecode': "0x606060405260fd806100116000396000f360606040526000357c0100000000000000000000000000000000000000000000000000000000900480630c55699c146037576035565b005b604260048050506044565b005b73__B_____________________________________630c55699c604051817c01000000000000000000000000000000000000000000000000000000000281526004018090506000604051808303818660325a03f41560025750505073__C_____________________________________630c55699c604051817c01000000000000000000000000000000000000000000000000000000000281526004018090506000604051808303818660325a03f4156002575050505b56"},
    "B": {'bytecode': "0x606060405260518060106000396000f36503059da08ac35060606040526000357c0100000000000000000000000000000000000000000000000000000000900480630c55699c14604157603d565b6007565b604c6004805050604e565b005b5b56"},
    "C": {'bytecode': "0x606060405260ac8060106000396000f36503059da08ac35060606040526000357c0100000000000000000000000000000000000000000000000000000000900480630c55699c14604157603d565b6007565b604c6004805050604e565b005b73__E_____________________________________630c55699c604051817c01000000000000000000000000000000000000000000000000000000000281526004018090506000604051808303818660325a03f4156007575050505b56"},
    "D": {'bytecode': "0x606060405261010e806100126000396000f36503059da08ac35060606040526000357c0100000000000000000000000000000000000000000000000000000000900480630c55699c146100445761003f565b610007565b6100516004805050610053565b005b73__B_____________________________________630c55699c604051817c01000000000000000000000000000000000000000000000000000000000281526004018090506000604051808303818660325a03f4156100075750505073__E_____________________________________630c55699c604051817c01000000000000000000000000000000000000000000000000000000000281526004018090506000604051808303818660325a03f415610007575050505b56"},
    "E": {'bytecode': "0x606060405260ac8060106000396000f36503059da08ac35060606040526000357c0100000000000000000000000000000000000000000000000000000000900480630c55699c14604157603d565b6007565b604c6004805050604e565b005b73__B_____________________________________630c55699c604051817c01000000000000000000000000000000000000000000000000000000000281526004018090506000604051808303818660325a03f4156007575050505b56"},
}


@pytest.mark.parametrize(
    'contracts_to_deploy,expected_deploy_orders',
    (
        (['A'], [
            ['B', 'E', 'C', 'A'],
            ['B', 'E', 'C', 'A'],
        ]),
        (['B'], [['B']]),
        (['C'], [['B', 'E', 'C']]),
        (['D'], [['B', 'E', 'D']]),
        (['E'], [['B', 'E']]),
        (['C', 'D'], [['B', 'E', 'C', 'D'], ['B', 'E', 'D', 'C']]),
        (['A', 'D'], [
            ['B', 'E', 'D', 'C', 'A'],
            ['B', 'E', 'C', 'D', 'A'],
            ['B', 'E', 'C', 'A', 'D'],
        ]),
        (['A', 'B', 'C', 'D', 'E'], [
            ['B', 'E', 'D', 'C', 'A'],
            ['B', 'E', 'C', 'D', 'A'],
            ['B', 'E', 'C', 'A', 'D'],
        ]),
    )
)
def test_get_deploy_order(contracts_to_deploy, expected_deploy_orders):
    actual_deploy_order = list(get_deploy_order(contracts_to_deploy, CONTRACTS).keys())

    assert any([
        actual_deploy_order == expected_deploy_order
        for expected_deploy_order
        in expected_deploy_orders
    ])
